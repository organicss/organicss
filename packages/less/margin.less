// All props are optional and default to null
.margin(
  @block: null;
  @blockEnd: null;
  @blockStart: null;
  @inline: null;
  @inlineEnd: null;
  @inlineStart: null;
  @margin: null;
  @scroll: null;
  @scrollBlock: null;
  @scrollBlockEnd: null;
  @scrollBlockStart: null;
  @scrollInline: null;
  @scrollInlineEnd: null;
  @scrollInlineStart: null;
) {
    // General value that apply to more than one side
    & when not (@margin = null) {
        margin: @margin;
    }

    // Axis specific values to apply to two sides
    & when not (@block = null) {
        margin-block: @block;
    }
    & when not (@inline = null) {
        margin-inline: @inline;
    }

    // Side specific values to overwrite any general or axis values
    & when not (@blockEnd = null) {
        margin-block-end: @blockEnd;
    }
    & when not (@blockStart = null) {
        margin-block-start: @blockStart;
    }
    & when not (@inlineEnd = null) {
        margin-inline-end: @inlineEnd;
    }
    & when not (@inlineStart = null) {
        margin-inline-start: @inlineStart;
    }

    // General scroll values that apply to more than one side
    & when not (@scroll = null) {
        scroll-margin: @scroll;
    }

    // Axis specific values to apply to two sides
    & when not (@scrollBlock = null) {
        scroll-margin-block: @scrollBlock;
    }
    & when not (@scrollInline = null) {
        scroll-margin-inline: @scrollInline;
    }

    // Side specific scroll values to overwrite any general or axis values
    & when not (@scrollBlockEnd = null) {
        scroll-margin-block-end: @scrollBlockEnd;
    }
    & when not (@scrollBlockStart = null) {
        scroll-margin-block-start: @scrollBlockStart;
    }
    & when not (@scrollInlineEnd = null) {
        scroll-margin-inline-end: @scrollInlineEnd;
    }
    & when not (@scrollInlineStart = null) {
        scroll-margin-inline-start: @scrollInlineStart;
    }

    @supports not (margin-block-end: 1rem) {
        // Side-specific fallbacks or axis-specific fallbacks
        & when (not (@blockEnd = null) or not (@block = null)) {
            margin-bottom: if(
                not (@blockEnd = null),
                @blockEnd,
                if(length(@block) = 2, extract(@block, 2), extract(@block, 1))
            );
        }
        & when (not (@blockStart = null) or not (@block = null)) {
            margin-top: if(not (@blockStart = null), @blockStart, extract(@block, 1));
        }
        & when (not (@inlineEnd = null) or not (@inline = null)) {
            margin-right: if(
                not (@inlineEnd = null),
                @inlineEnd,
                if(length(@inline) = 2, extract(@inline, 2), extract(@inline, 1))
            );
        }
        & when (not (@inlineStart = null) or not (@inline = null)) {
            margin-left: if(not (@inlineStart = null), @inlineStart, extract(@inline, 1));
        }
    }

    @supports not (margin-block-end: 1rem) {
        // Side-specific fallbacks or axis-specific fallbacks
        & when (not (@scrollBlockEnd = null) or not (@scrollBlock = null)) {
            scroll-margin-bottom: if(
                not (@scrollBlockEnd = null),
                @scrollBlockEnd,
                if(length(@scrollBlock) = 2, extract(@scrollBlock, 2), extract(@scrollBlock, 1))
            );
        }
        & when (not (@scrollBlockStart = null) or not (@scrollBlock = null)) {
            scroll-margin-top: if(
                not (@scrollBlockStart = null),
                @scrollBlockStart,
                extract(@scrollBlock, 1)
            );
        }
        & when (not (@scrollInlineEnd = null) or not (@scrollInline = null)) {
            scroll-margin-right: if(
                not (@scrollInlineEnd = null),
                @scrollInlineEnd,
                if(length(@scrollInline) = 2, extract(@scrollInline, 2), extract(@scrollInline, 1))
            );
        }
        & when (not (@scrollInlineStart = null) or not (@scrollInline = null)) {
            scroll-margin-left: if(
                not (@scrollInlineStart = null),
                @scrollInlineStart,
                extract(@scrollInline, 1)
            );
        }
    }
}
